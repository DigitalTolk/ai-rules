# Exposed Composables

The following composables are exposed by the Core MFE:

## useAuth
- Provides authentication logic and state.
- Usage:
```ts
import { useAuth } from 'coreMFE/useAuth';
const { login, logout, isAuthenticated, user, loadUserProfile, ... } = useAuth();
```

## useMultitenancy
- Provides tenant management and multi-tenancy logic.
- Usage:
```ts
import { useMultitenancy } from 'coreMFE/useMultitenancy';
const { appTenant, loadTenant, tenantsList, loadTenantsList, ... } = useMultitenancy();
```

## useAuthConfig
- Provides and manages authentication module config.
- Usage:
```ts
import { useAuthConfig } from 'coreMFE/useAuthConfig';
const { setConfig, getConfig } = useAuthConfig();
```

## useTenantConfig
- Provides and manages tenant module config.
- Usage:
```ts
import { useTenantConfig } from 'coreMFE/useTenantConfig';
const { setConfig, getConfig } = useTenantConfig();
```

## useVerbiageConfig
- Provides and manages verbiage module config.
- Usage:
```ts
import { useVerbiageConfig } from 'coreMFE/useVerbiageConfig';
const { setConfig, getConfig } = useVerbiageConfig();
```

## useVerbiage
- Provides i18n and verbiage management.
- Usage:
```ts
import { useVerbiage } from 'coreMFE/useVerbiage';
const { setupI18n, switchLanguage, getVerbiage, ... } = useVerbiage();
```

## useNotification
- Provides notification logic for UI feedback.
- Usage:
```ts
import { useNotification } from 'coreMFE/useNotification';
const { triggerNotification, notificationMessage, ... } = useNotification();
```

## useApi
- Generic API utility for HTTP requests.
- Usage:
```ts
import { useApi } from 'coreMFE/useApi';
const api = useApi<MyType>();
``` 