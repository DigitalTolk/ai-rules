---
description: 
globs: 
alwaysApply: false
---
# Mobile Layouts

## Overview

These guidelines help ensure consistent, responsive designs across all mobile devices. Follow these practices when implementing layouts that need to be responsive and mobile-friendly.

## Core Principles

1. **Mobile-First Approach**
   - Start with mobile layouts and progressively enhance for larger screens
   - Use Tailwind's responsive prefixes (`sm:`, `md:`, `lg:`, `xl:`, `2xl:`)
   - Test on smaller screens first before expanding to larger ones

2. **Responsive Units**
   - Use relative units (`rem`, `em`, `%`) instead of fixed units (`px`)
   - Employ Tailwind's built-in spacing scale for consistent spacing
   - Leverage `max-w-*` and `min-w-*` classes for controlled expansion/contraction

3. **Flexible Layout Patterns**
   - Use flexbox (`flex`) for one-dimensional layouts (rows or columns)
   - Use CSS grid (`grid`) for two-dimensional layouts
   - Implement stack layouts with proper spacing between elements

## Example Patterns

### Responsive Card Grid
```vue
<div class="grid grid-cols-1 sm:grid-cols-2 md:grid-cols-3 lg:grid-cols-4 gap-4">
  <div v-for="item in items" :key="item.id" class="p-4 border rounded-lg">
    <!-- Card content -->
  </div>
</div>
```

### Mobile Navigation (Hamburger Menu)
```vue
<template>
  <div>
    <!-- Mobile menu button -->
    <button @click="isOpen = !isOpen" class="block md:hidden">
      <span class="sr-only">Open menu</span>
      <BaseIcon type="menu" />
    </button>
    
    <!-- Desktop navigation -->
    <nav class="hidden md:flex space-x-4">
      <!-- Navigation links -->
    </nav>
    
    <!-- Mobile menu (off-canvas) -->
    <div v-if="isOpen" class="fixed inset-0 z-50 md:hidden">
      <!-- Mobile menu content -->
    </div>
  </div>
</template>
```

### Responsive Typography
```vue
<template>
  <h1 class="text-2xl sm:text-3xl md:text-4xl lg:text-5xl font-bold">
    Responsive Heading
  </h1>
  <p class="text-sm sm:text-base md:text-lg">
    Responsive paragraph text that scales with screen size
  </p>
</template>
```

## Testing Guidelines

- Test on multiple device sizes (use browser dev tools' device emulation)
- Verify layouts at common breakpoints (320px, 375px, 425px, 768px, 1024px)
- Check for text overflow, content clipping, and improper spacing
- Ensure touch targets are at least 44x44px for better usability
- Verify that all interactive elements work properly on touch devices

## Performance Considerations

- Use `v-if` or `v-show` for conditionally rendering complex components based on screen size
- Lazy load non-critical components or content for mobile devices
- Optimize images with responsive images (srcset, sizes) or picture element
- Consider using skeleton loaders for content that may take time to load on slower mobile connections

## Accessibility Guidelines

- Ensure sufficient color contrast for all text elements
- Make sure touch targets are appropriately sized and spaced
- Test keyboard navigation on all devices
- Implement proper ARIA attributes for custom interactive elements
- Test with screen readers on both mobile and desktop devices
