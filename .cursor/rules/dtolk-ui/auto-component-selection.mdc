---
description: 
globs: 
alwaysApply: false
---
# Automatic Component Selection

When implementing UI features, automatically select the most appropriate DigitalTolk UI components based on the context and requirements without explicit instructions. Follow these guidelines to ensure consistent component usage.

## General Rules

1. Always use DigitalTolk UI components instead of HTML elements when equivalent components exist
2. Import all components from '@digitaltolk/ui'
3. Use the appropriate component based on the context and function needed

## Component Mapping

### Instead of HTML elements, use these DigitalTolk UI components:

| HTML Element | DigitalTolk UI Component |
| :--- | :--- |
| `<button>` | `<BaseButton>` |
| `<a>` | `<BaseLink>` |
| `<input type="text">` | `<BaseTextField>` |
| `<input type="number">` | `<BaseInputNumber>` |
| `<input type="checkbox">` | `<BaseCheckbox>` |
| `<input type="radio">` | `<BaseRadio>` |
| `<select>` | `<BaseSelect>` |
| `<table>` | `<BaseTable>` |
| `<div>` (for container) | `<BaseCard>` |
| `<div>` (for layout) | `<BaseGrid>` |
| `<hr>` | `<BaseDivider>` |
| `<form>` | `<BaseForm>` |
| `<ul>` or `<ol>` | `<BaseList>` |
| `<textarea>` | `<BaseTextField multiline>` |

## Context-Based Selection

### Form Implementation
When implementing forms, automatically use:
- `<BaseForm>` as the container
- `<BaseTextField>` for text inputs
- `<BaseSelect>` for dropdowns
- `<BaseCheckbox>` or `<BaseSwitch>` for boolean choices
- `<BaseRadioGroup>` for exclusive selections
- `<BaseButton type="primary">` for submit actions

### Dashboard or Statistics
When implementing dashboards or statistics displays, automatically use:
- `<BaseGrid>` for layout
- `<BaseCard>` for content containers
- `<BaseMetric>` for key performance indicators
- `<BaseChart>` for data visualization

### User Information
When displaying user information, automatically use:
- `<BaseAvatar>` for user images
- `<BaseAvatarGroup>` for groups of users
- `<BaseTag>` for status or roles

### Data Tables or Lists
When displaying tabular data or lists, automatically use:
- `<BaseTable>` for structured data with columns
- `<BaseList>` for simpler data lists
- `<BasePagination>` for multi-page data

### Navigation
When implementing navigation elements, automatically use:
- `<BaseLink>` for page navigation
- `<BaseButton>` for actions
- `<BaseTabs>` for page sections
- `<BaseMenu>` for navigation menus
- `<BaseDropdown>` for dropdown menus

### Status and Feedback
When displaying status or feedback to users, automatically use:
- `<BaseAlert>` for important messages
- `<BaseToaster>` for temporary notifications
- `<BaseProgress>` for showing progress
- `<BaseSpin>` or `<BaseSkeleton>` for loading states

## Component Selection Process

1. Identify the UI element's function (input, display, navigation, layout, etc.)
2. Determine the appropriate DigitalTolk UI component based on context
3. Use the component with appropriate props based on requirements
4. Add necessary event handlers and state management
5. Ensure the component is responsive and accessible

Remember: Always select components based on their semantic meaning and function, not just their appearance. This ensures proper accessibility and user experience.
