---
description: Checkbox input component for boolean selections
globs: components/base/BaseCheckbox.vue
alwaysApply: false
---
# BaseCheckbox Component

## Description
Checkbox input component for boolean selections. BaseCheckbox supports both standalone usage and integration with form components, with v-model binding for easy state management.

## Props

| Prop | Type | Default | Description |
|------|------|---------|-------------|
| modelValue | String/Number/Boolean | undefined | Value used with v-model for two-way binding |
| checked | Boolean | undefined | Whether the checkbox is checked |
| defaultChecked | Boolean | false | The default checked state when uncontrolled |
| disabled | Boolean | false | Whether the checkbox is disabled |
| focusable | Boolean | true | Whether the checkbox can receive focus |
| indeterminate | Boolean | false | Whether the checkbox is in an indeterminate state |
| label | String | undefined | Text label to display next to the checkbox |
| size | String | "medium" | Size of the checkbox ("small", "medium", "large") |
| value | String/Number | undefined | Value for the checkbox when used in groups |
| isVertical | Boolean | false | Whether to arrange content vertically |
| themeOverrides | Object | {} | Custom theme overrides for styling |

## Events

| Event | Parameters | Description |
|-------|------------|-------------|
| update:modelValue | value | Emitted when the checkbox state changes (for v-model) |
| update:checked | value | Emitted when the checkbox state changes |
| blur | event | Emitted when the checkbox loses focus |
| focus | event | Emitted when the checkbox receives focus |

## Slots

| Slot | Description |
|------|-------------|
| default | Custom content to replace or append to the label |

## Usage Examples

### Basic Usage
```vue
<template>
  <BaseCheckbox v-model="isChecked" label="Accept terms" />
</template>

<script setup>
import { ref } from 'vue';

const isChecked = ref(false);
</script>
```

### With Custom Label Content
```vue
<template>
  <BaseCheckbox v-model="rememberMe">
    Remember me on this device
    <span style="color: red; margin-left: 4px;">*</span>
  </BaseCheckbox>
</template>

<script setup>
import { ref } from 'vue';

const rememberMe = ref(false);
</script>
```

### Disabled and Indeterminate States
```vue
<template>
  <div>
    <BaseCheckbox label="Disabled checkbox" disabled />
    <BaseCheckbox
      label="Some items selected"
      :indeterminate="true"
      v-model="someSelected"
    />
  </div>
</template>

<script setup>
import { ref } from 'vue';

const someSelected = ref(true);
</script>
```

### Different Sizes
```vue
<template>
  <div>
    <BaseCheckbox label="Small checkbox" size="small" />
    <BaseCheckbox label="Medium checkbox" size="medium" />
    <BaseCheckbox label="Large checkbox" size="large" />
  </div>
</template>
```

### Handling Events
```vue
<template>
  <BaseCheckbox
    v-model="agreeToTerms"
    label="I agree to the terms"
    @update:checked="handleChange"
    @focus="handleFocus"
    @blur="handleBlur"
  />
</template>

<script setup>
import { ref } from 'vue';

const agreeToTerms = ref(false);

const handleChange = (value) => {
  console.log('Checkbox changed:', value);
};

const handleFocus = () => {
  console.log('Checkbox focused');
};

const handleBlur = () => {
  console.log('Checkbox blurred');
};
</script>
```

### With Custom Styling
```vue
<template>
  <BaseCheckbox
    v-model="isSelected"
    label="Custom styled checkbox"
    :theme-overrides="{
      colorChecked: '#1976d2',
      borderChecked: '1px solid #1976d2',
      borderRadius: '3px',
      labelFontWeight: 'bold'
    }"
  />
</template>

<script setup>
import { ref } from 'vue';

const isSelected = ref(false);
</script>
```

## Component Behavior Notes
- The component supports both `v-model` and `checked` props for controlling the state
- When used within a BaseCheckboxGroup or BaseForm, it inherits size and disabled state
- The checkbox has special styling for active, checked, and hover states
- The indeterminate state creates a "dash" in the checkbox to indicate partial selection
- For a group of related checkboxes, use BaseCheckboxGroup instead

## Styling
The component includes custom styling for various states:
- Hover and focus states with color changes
- Checked state with primary color highlighting
- Active state with shadow effects
- Label alignment and spacing optimizations

## Related Components
- BaseCheckboxGroup - For managing a group of related checkboxes
- BaseForm - Container component with validation handling
- BaseWrapper - Provides base functionality for UI components
