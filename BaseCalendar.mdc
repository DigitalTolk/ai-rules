---
description: Calendar display and date selection component
globs: components/base/BaseCalendar.vue
alwaysApply: false
---
# BaseCalendar Component

## Description
A versatile calendar component for displaying and interacting with events, appointments, and schedules. BaseCalendar provides multiple view options (day, week, month, year) with extensive customization capabilities.

## Props

| Prop | Type | Default | Description |
|------|------|---------|-------------|
| activeView | String | "week" | Initial calendar view (week, day, month, year) |
| allDayBarHeight | String/Number | "25px" | Height of the all-day events bar |
| cellClickHold | Boolean | true | Enable event creation by clicking and holding |
| cellContextmenu | Boolean | false | Enable cell context menu |
| clickToNavigate | Boolean | false | Navigate to day view on cell click |
| dblclickToNavigate | Boolean | true | Navigate to day view on cell double-click |
| disableDatePrototypes | Boolean | false | Disable Date prototype modifications |
| disableDays | Array | [] | Array of disabled days (0-6, 0 is Sunday) |
| disableViews | Array | [] | Array of views to disable |
| dragToCreateEvent | Boolean | true | Enable drag to create events |
| dragToCreateThreshold | Number | 15 | Minimum drag pixels to create an event |
| editableEvents | Boolean/Object | false | Make events editable |
| events | Array | [] | Array of events to display |
| eventsCountOnYearView | Boolean | false | Show event count on year view |
| eventsOnMonthView | Boolean/String | false | Show events on month view |
| hideBody | Boolean | false | Hide the calendar body |
| hideTitleBar | Boolean | false | Hide the title bar |
| hideViewSelector | Boolean | false | Hide the view selector |
| hideWeekdays | Array | [] | Array of weekdays to hide |
| hideWeekends | Boolean | false | Hide weekends |
| locale | String | "en" | Calendar locale |
| maxDate | String/Date | "" | Maximum selectable date |
| minCellWidth | Number | 0 | Minimum cell width |
| minDate | String/Date | "" | Minimum selectable date |
| minEventWidth | Number | 0 | Minimum event width |
| minSplitWidth | Number | 0 | Minimum split width |
| overlapsPerTimeStep | Boolean | false | Calculate overlaps per time step |
| resizeX | Boolean | false | Allow horizontal event resizing |
| selectedDate | String/Date | "" | Currently selected date |
| showAllDayEvents | Boolean/String | false | Show all-day events |
| showTimeInCells | Boolean | false | Show time in cells |
| showWeekNumbers | Boolean/String | false | Show week numbers |
| small | Boolean | false | Use small size calendar |
| snapToTime | Number | null | Snap events to time increments |
| specialHours | Object | {} | Define special hours |
| splitDays | Array | [] | Split days into columns |
| startWeekOnSunday | Boolean | false | Start weeks on Sunday |
| stickySplitLabels | Boolean | false | Make split labels sticky |
| time | Boolean | true | Show time |
| timeCellHeight | Number | 40 | Height of time cells |
| timeFormat | String | "" | Time format |
| timeFrom | Number | 0 | Start time in minutes |
| timeStep | Number | 60 | Time step in minutes |
| timeTo | Number | 24 * 60 | End time in minutes |
| todayButton | Boolean | false | Show today button |
| transitions | Boolean | true | Enable view transitions |
| twelveHour | Boolean | false | Use 12-hour format |
| xsmall | Boolean | false | Use extra small size |
| watchRealTime | Boolean | false | Update display in real-time |

## Events

| Event | Parameters | Description |
|-------|------------|-------------|
| ready | event | Emitted when the calendar is ready |
| view-change | event | Emitted when the view changes |
| cell-click | event | Emitted when a cell is clicked |
| cell-dblclick | event | Emitted when a cell is double-clicked |
| cell-contextmenu | event | Emitted on cell right-click |
| cell-keypress-enter | event | Emitted when Enter key is pressed on a cell |
| cell-focus | event | Emitted when a cell receives focus |
| event-focus | event | Emitted when an event receives focus |
| event-mouse-enter | event | Emitted when mouse enters an event |
| event-mouse-leave | event | Emitted when mouse leaves an event |
| event-title-change | event | Emitted when an event title changes |
| event-content-change | event | Emitted when event content changes |
| event-duration-change | event | Emitted when an event duration changes |
| event-resizing | event | Emitted while an event is being resized |
| event-drop | event | Emitted when an event is dropped |
| event-change | event | Emitted when an event changes |
| event-create | event | Emitted when an event is created |
| event-drag-create | event | Emitted when an event is created by dragging |
| event-delete | event | Emitted when an event is deleted |
| update:selectedDate | date | Emitted when selected date changes |
| update:activeView | view | Emitted when active view changes |
| on-event-click | event, extra | Emitted when an event is clicked |
| on-event-dblclick | event, extra | Emitted when an event is double-clicked |
| on-event-create | event, extra | Emitted when an event is created |

## Slots

| Slot | Description |
|------|-------------|
| arrow-prev | Custom previous arrow content |
| arrow-next | Custom next arrow content |
| title | Custom title content |
| time-cell | Custom time cell content |
| today-button | Custom today button content |
| week-number | Custom week number content |
| weekday-heading | Custom weekday heading |
| header-today | Custom header for today |
| header-date | Custom header for normal dates |
| day-content | Custom day content |
| all-day | Custom all-day section content |
| event | Custom event rendering |
| no-event | Custom content when no events |
| event-popover | Custom event popover |

## Usage Examples

### Basic Usage
```vue
<template>
  <BaseCalendar />
</template>
```

### With Events
```vue
<template>
  <BaseCalendar
    :events="[
      {
        start: '2023-05-15 10:00',
        end: '2023-05-15 12:00',
        title: 'Meeting with team',
        content: 'Discuss project updates',
        class: 'meeting'
      },
      {
        start: '2023-05-16 14:00',
        end: '2023-05-16 15:30',
        title: 'Client call',
        content: 'Product demo',
        class: 'call'
      }
    ]"
  />
</template>
```

### Custom View and Selected Date
```vue
<template>
  <BaseCalendar
    activeView="month"
    selectedDate="2023-05-01"
    @update:selectedDate="handleDateChange"
    @update:activeView="handleViewChange"
  />
</template>

<script setup>
const handleDateChange = (date) => {
  console.log('Selected date:', date);
};

const handleViewChange = (view) => {
  console.log('Active view:', view);
};
</script>
```

### Time Range and Week Start Configuration
```vue
<template>
  <BaseCalendar
    :timeFrom="8 * 60"  <!-- 8:00 AM -->
    :timeTo="18 * 60"   <!-- 6:00 PM -->
    :timeStep="30"      <!-- 30-minute intervals -->
    startWeekOnSunday
    twelveHour
  />
</template>
```

### Event Handling
```vue
<template>
  <BaseCalendar
    :events="events"
    @cell-click="handleCellClick"
    @on-event-click="handleEventClick"
    @event-create="handleEventCreate"
  />
</template>

<script setup>
const events = ref([
  {
    start: '2023-05-20 09:00',
    end: '2023-05-20 10:00',
    title: 'Morning standup'
  }
]);

const handleCellClick = (cell) => {
  console.log('Cell clicked:', cell);
};

const handleEventClick = (event, extra) => {
  console.log('Event clicked:', event);
};

const handleEventCreate = (event) => {
  console.log('Event created:', event);
  events.value.push(event);
};
</script>
```

### Custom Event Styling
```vue
<template>
  <BaseCalendar :events="events">
    <template #event="{ event, view }">
      <div :class="['custom-event', event.class]">
        <div class="event-title">{{ event.title }}</div>
        <div v-if="view !== 'month' && view !== 'year'" class="event-content">
          {{ event.content }}
        </div>
      </div>
    </template>
  </BaseCalendar>
</template>

<style>
.custom-event {
  border-radius: 3px;
  padding: 4px;
  height: 100%;
}
.meeting {
  background-color: rgba(144, 202, 249, 0.6);
  border-left: 3px solid #1976d2;
}
.call {
  background-color: rgba(129, 199, 132, 0.6);
  border-left: 3px solid #388e3c;
}
</style>
```

## Component Behavior Notes
- The component is a wrapper around the vue-cal library
- By default, shows a week view with 60-minute time slots
- Automatically passes through all slots to the underlying vue-cal component
- For editable events, set the `editableEvents` prop to true
- Event objects should include `start` and `end` properties (date strings or Date objects)

## Styling
The component includes default styling with:
- Light box shadow and white background
- Customized headers for different views (day, week, month)
- Responsive design for different screen sizes
- Customized event appearance with hover effects
- Special styling for today's date
- Support for small and extra small sizes

## Related Components
- BaseWrapper - Provides base functionality for UI components
- BaseIcon - Can be used within custom slots for event indicators
